import EMail from './LoginFields/EMail';
import Password from './LoginFields/Password';
import UserName from './LoginFields/UserName';
import CustomButton from './LoginFields/CustomButton';
import FirstName from './LoginFields/FirstName';
import LastName from './LoginFields/LastName';
import FullName from './LoginFields/FullName';
import PhoneNumber from './LoginFields/PhoneNumber';
import { Alert } from 'react-native';
import globalValues from './globalState'
//var Spinner = globalValues.Spinner

export async function LogoutAction(){
    console.log("LogoutAction")
    var promise = new Promise(function (resolve, reject) {
                globalValues.Email='',
                globalValues.Password='',
                globalValues.FirstName='',
                globalValues.LastName='',
                globalValues.FullName='',
                globalValues.PhoneNumber='',
                globalValues.UserName='',
                globalValues.Spinner=false
        resolve('logout sucess')
    })
    return promise;

}

export async function ButtonAction(parameters) {
    console.log("parameters:"+JSON.stringify(parameters))
    console.log("globerValues:"+JSON.stringify(globalValues))
    if(parameters.field == 'register'){
        const fullName = await globalValues.FullName;
        const email = await globalValues.Email;
        const password = await globalValues.Password;
        const firstName = await globalValues.FirstName;
        const lastName = await globalValues.LastName;
        const phoneNumber = await globalValues.PhoneNumber;
        const username = await globalValues.UserName;
        const userName = await globalValues.UserName;
        var reg = /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
        var regMobile = /^\d{10,16}$/
        if((fullName == '' || fullName == null) && parameters.fields.FullName != undefined){
            var promise = new Promise(function (resolve, reject) {
                Alert.alert(parameters.AppName, 'Please enter Full Name', [
                        {
                            text: 'OK', onPress: () => {
                                resolve({"isvalid": false})
                            }
                        },
                    ],
                    {cancelable: false});
            })
            return promise;
        }
       else if((email == '' || email == null) && parameters.fields.EMail != undefined){
            var promise = new Promise(function (resolve, reject) {
                Alert.alert(AppName, 'Please enter Email', [
                        {
                            text: 'OK', onPress: () => {
                                resolve({"isvalid": false})
                            }
                        },
                    ],
                    {cancelable: false});
            })
            return promise;
        }else if(parameters.fields.EMail != undefined && !reg.test(email)){
            var promise = new Promise(function (resolve, reject) {
                Alert.alert(parameters.AppName, 'Please enter valid Email', [
                        {
                            text: 'OK', onPress: () => {
                                resolve({"isvalid": false})
                            }
                        },
                    ],
                    {cancelable: false});
            })
            return promise;
        }
        else if ((password == '' || password == null) && parameters.fields.Password != undefined){
            var promise = new Promise(function (resolve, reject) {
                Alert.alert(AppName, 'Please enter Password', [
                        {
                            text: 'OK', onPress: () => {
                                resolve({"isvalid": false})
                            }
                        },
                    ],
                    {cancelable: false});
            })
            return promise;
        }else if((firstName == '' || firstName == null) && parameters.fields.FirstName != undefined ){
            var promise = new Promise(function (resolve, reject) {
                Alert.alert(parameters.AppName, 'Please enter FirstName', [
                        {
                            text: 'OK', onPress: () => {
                                resolve({"isvalid": false})
                            }
                        },
                    ],
                    {cancelable: false});
            })
            return promise;
        }else if((userName == '' || userName == null) && parameters.fields.UserName != undefined ){
            var promise = new Promise(function (resolve, reject) {
                Alert.alert(parameters.AppName, 'Please enter UserName', [
                        {
                            text: 'OK', onPress: () => {
                                resolve({"isvalid": false})
                            }
                        },
                    ],
                    {cancelable: false});
            })
            return promise;
        }
        else if((lastName == '' || lastName == null) && parameters.fields.LastName != undefined){
            var promise = new Promise(function (resolve, reject) {
                Alert.alert(AppName, 'Please enter LastName', [
                        {
                            text: 'OK', onPress: () => {
                                resolve({"isvalid": false})
                            }
                        },
                    ],
                    {cancelable: false});
            })
            return promise;
        }else if((phoneNumber == '' || phoneNumber == null) && parameters.fields.PhoneNumber != undefined){
            var promise = new Promise(function (resolve, reject) {
                Alert.alert(parameters.AppName, 'Please enter PhoneNumber', [
                        {
                            text: 'OK', onPress: () => {
                                resolve({"isvalid": false})
                            }
                        },
                    ],
                    {cancelable: false});
            })
            return promise;
        }else if(parameters.fields.PhoneNumber != undefined && !regMobile.test(phoneNumber)){
            var promise = new Promise(function (resolve, reject) {
                Alert.alert(AppName, 'Please enter valid Phone Number', [
                        {
                            text: 'OK', onPress: () => {
                                resolve({"isvalid": false})
                            }
                        },
                    ],
                    {cancelable: false});
            })
            return promise;
        }
        else{
            var string = {	"email": email,"password": password,"username":username,"userName":userName,
            "firstName":firstName,"lastName":lastName,"phone":phoneNumber,"fullName":fullName}
            console.log("string:"+JSON.stringify(string))
            const headers= parameters.headers
            console.log("headers:"+JSON.stringify(headers))
            // alert("string:"+JSON.stringify(string))
            const url = parameters.url
            var promise = new Promise(function (resolve, reject) {
                fetch(url, {
                    method: 'POST',
                    headers: headers,
                    body: JSON.stringify(string)
                }).then((response) => response.json()).then((responseData) => {
                   // AsyncStorage.setItem('FullName','');
                   // AsyncStorage.setItem('EMail','');
                  //  AsyncStorage.setItem('Password','');
                    resolve(responseData);
                }).catch((err) => {
                    reject(err)
                })
            })
            return promise;
        }
    }else{
        const email = await globalValues.Email;
        const password = await globalValues.Password;
        const userName = await globalValues.UserName;
        const username = await globalValues.UserName;
        var reg = /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
        //alert("url:"+url)
        if((email == '' || email == null) && parameters.fields.EMail != undefined){
            var promise = new Promise(function (resolve, reject) {
                Alert.alert(parameters.AppName, 'Please enter Email', [
                        {
                            text: 'OK', onPress: () => {
                                resolve({"isvalid": false})
                            }
                        },
                    ],
                    {cancelable: false});
            })
            return promise;
        }else if(parameters.fields.EMail != undefined && !reg.test(email)){
            var promise = new Promise(function (resolve, reject) {
                Alert.alert(parameters.AppName, 'Please enter valid Email', [
                        {
                            text: 'OK', onPress: () => {
                                resolve({"isvalid": false})
                            }
                        },
                    ],
                    {cancelable: false});
            })
            return promise;
        }
        else if ((password == '' || password == null) && parameters.fields.Password != undefined){
            var promise = new Promise(function (resolve, reject) {
                Alert.alert(parameters.AppName, 'Please enter Password', [
                        {
                            text: 'OK', onPress: () => {
                                resolve({"isvalid": false})
                            }
                        },
                    ],
                    {cancelable: false});
            })
            return promise;
        }else if ((userName == '' || userName == null) && parameters.fields.UserName != undefined){
            var promise = new Promise(function (resolve, reject) {
                Alert.alert(parameters.AppName, 'Please enter UserName', [
                        {
                            text: 'OK', onPress: () => {
                                resolve({"isvalid": false})
                            }
                        },
                    ],
                    {cancelable: false});
            })
            return promise;
        }else{
            var string = {	"email": email,"password": password,"username":username,"userName":userName}
            const headers= parameters.headers
            const url = parameters.url
            var promise = new Promise(function (resolve, reject) {
                fetch(url, {
                    method: 'POST',
                    headers: headers,
                    body: JSON.stringify(string)
                }).then((response) => response.json()).then((responseData) => {
                    Spinner = false
                   // AsyncStorage.setItem('EMail','');
                   // AsyncStorage.setItem('Password','');
                    resolve(responseData);
                }).catch((err) => {
                    reject(err)
                })
            })
            return promise;
        }
    }


}


export  { EMail, Password, UserName, CustomButton, FirstName, LastName, FullName, PhoneNumber}
